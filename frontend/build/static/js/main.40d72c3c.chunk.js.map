{"version":3,"sources":["components/global/Nav.js","components/landing/Contact.js","components/global/Footer.js","redux/actions/userActions.js","components/global/Signout.js","pages/register.js","pages/login.js","components/global/Nav2.js","components/global/SearchBar.js","components/global/RecipesListing.js","components/global/Badge.js","components/global/LoadingButton.js","pages/updateUser.js","redux/reducers/userReducer.js","redux/store.js","App.js","components/main/AuthenticatedRoute.js","components/main/UnauthenticatedRoute.js","serviceWorker.js","index.js"],"names":["Component","Footer","className","href","icon","faInstagram","faFacebookF","faTwitter","signoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","type","console","log","setAuthorizationHeader","token","idToken","setItem","mapActionsToProps","Register","connect","props","onClick","state","email","password","confirmPassword","handleChange","e","setState","target","id","value","handleSubmit","a","preventDefault","registerUser","history","user","this","errorDiv","error","message","onSubmit","htmlFor","required","onChange","aria-describedby","placeholder","disabled","isLoading","role","userCred","post","res","data","payload","push","response","Login","handleInputChange","event","name","loginUser","styles","badge","fontSize","margin","xBtn","marginLeft","padding","Badge","style","pref","handlePrefRemove","LoadingButton","UpdateUser","displayName","preference","preferences","country","cuisine","updateStateFromProps","handlePrefAdd","newPref","trim","toLowerCase","prevState","indexOf","alert","prefToRemove","filter","updateUser","prevProps","map","i","key","mapDispatchToProps","userInfo","initialState","isAuthenticated","middleware","thunk","reducers","combineReducers","action","recipe","recipeReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","component","rest","render","to","jwtDecode","exp","Date","now","location","get","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40d72c3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#features\">\r\n                  Features\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#about\">\r\n                  About\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#contact\">\r\n                  Contact\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                  Log In\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            message: ''\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n\r\n        console.log(event.target.value);\r\n      }\r\n\r\n      handleSubmit(event) {\r\n        console.log(event.target.value);\r\n        event.preventDefault();\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container-fluid\" id=\"contact\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h3>\r\n                            Get In Touch\r\n                        </h3>\r\n                        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aperiam quaerat maiores recusandae excepturi, eius temporibus totam odit obcaecati autem impedit eos dolorum reiciendis eum consectetur, fuga sed facilis in exercitationem.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">Email address</label>\r\n                                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" name=\"email\" onChange={this.handleInputChange.bind(this)} value={this.state.email}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">First Name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"John\" name=\"firstName\" onChange={this.handleInputChange.bind(this)} value={this.state.firstName}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlInput1\">Last Name</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Roberts\" name=\"lastName\" onChange={this.handleInputChange.bind(this)} value={this.state.lastName}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\">Message</label>\r\n                                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" name=\"message\" onChange={this.handleInputChange.bind(this)} value={this.state.message}></textarea>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInstagram, faFacebookF, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 text-center text-md-left\">\r\n                    <p>&copy; 2019 Project MKB - All Rights Reserved.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 text-center text-md-right\">\r\n                <a href=\"https://www.instgram.com\"><FontAwesomeIcon icon={ faInstagram } /></a>\r\n                <a href=\"https://www.facebook.com\"><FontAwesomeIcon icon={ faFacebookF } /></a>\r\n                <a href=\"https://www.twitter.com\"><FontAwesomeIcon icon={ faTwitter } /></a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\n// user login action\r\nexport const loginUser = (userCred, history) => async dispatch => {\r\n  dispatch({ type: \"USER_LOGIN_REQUEST\" });\r\n\r\n  try {\r\n    // call login api\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/users/signin\",\r\n      userCred\r\n    );\r\n    setAuthorizationHeader(res.data.token);\r\n\r\n    dispatch({\r\n      type: \"USER_LOGIN_SUCCESS\",\r\n      payload: res.data\r\n    });\r\n\r\n    // redirect to home page when login process finishes\r\n    history.push(\"/\");\r\n    console.log(`Welcome ${res.data.email}`);\r\n  } catch (e) {\r\n    const error = e.response.data.error;\r\n    console.log(error);\r\n    dispatch({\r\n      type: \"USER_LOGIN_FAILURE\",\r\n      payload: error\r\n    });\r\n  }\r\n};\r\n\r\n// user signup action\r\nexport const registerUser = (userCred, history) => async dispatch => {\r\n  dispatch({ type: \"USER_REGISTER_REQUEST\" });\r\n\r\n  try {\r\n    // call login api\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/users/signup\",\r\n      userCred\r\n    );\r\n\r\n    console.log(`welcome ${res.data.email}`);\r\n    setAuthorizationHeader(res.data.token);\r\n\r\n    dispatch({\r\n      type: \"USER_REGISTER_SUCCESS\",\r\n      payload: res.data\r\n    });\r\n\r\n    // redirect to home page when login process finishes\r\n    history.push(\"/\");\r\n  } catch (e) {\r\n    const error = e.response.data.error;\r\n    console.log(error);\r\n    dispatch({\r\n      type: \"USER_REGISTER_FAILURE\",\r\n      payload: error\r\n    });\r\n  }\r\n};\r\n\r\n// get user info action\r\nexport const getUser = () => async dispatch => {\r\n  dispatch({ type: \"USER_GET_REQUEST\" });\r\n\r\n  try {\r\n    // call get user api\r\n    const res = await axios.get(\"http://localhost:5000/users/\");\r\n    dispatch({\r\n      type: \"USER_GET_SUCCESS\",\r\n      payload: res.data\r\n    });\r\n  } catch (e) {\r\n    const error = e.response.data.error;\r\n    console.log(error);\r\n    dispatch({\r\n      type: \"USER_GET_FAILURE\",\r\n      payload: error\r\n    });\r\n  }\r\n};\r\n\r\n// user signout action\r\nexport const signoutUser = () => dispatch => {\r\n  localStorage.removeItem(\"token\");\r\n  delete axios.defaults.headers.common[\"Authorization\"];\r\n  dispatch({ type: \"SET_UNAUTHENTICATED\" });\r\n  console.log(\"Successfully signed out\");\r\n};\r\n\r\n// update user info\r\nexport const updateUser = (userInfo, history) => async dispatch => {\r\n  console.log(\"update user action\");\r\n  dispatch({ type: \"USER_UPDATE_REQUEST\" });\r\n\r\n  try {\r\n    // call update api\r\n    const res = await axios.post(\r\n      \"http://localhost:5000/users/update\",\r\n      userInfo\r\n    );\r\n\r\n    dispatch({\r\n      type: \"USER_UPDATE_SUCCESS\",\r\n      payload: res.data\r\n    });\r\n\r\n    alert(\"User info is successfully updated!\");\r\n    // redirect to home page when login process finishes\r\n    history.push(\"/\");\r\n  } catch (e) {\r\n    const error = e.response.data.error;\r\n    console.log(error);\r\n    dispatch({\r\n      type: \"USER_UPDATE_FAILURE\",\r\n      payload: error\r\n    });\r\n  }\r\n};\r\n\r\n// save token to local storage to use it later\r\n// when calling another api that only logged in user can call\r\nconst setAuthorizationHeader = token => {\r\n  const idToken = `Bearer ${token}`;\r\n  localStorage.setItem(\"token\", idToken);\r\n  axios.defaults.headers.common[\"Authorization\"] = idToken;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signoutUser } from \"../../redux/actions/userActions\";\r\n\r\nconst Signout = props => {\r\n  return (\r\n    <button className=\"btn btn-warning\" onClick={props.signoutUser}>\r\n      Sign Out\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  signoutUser\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapActionsToProps\r\n)(Signout);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../redux/actions/userActions\";\r\n\r\nexport class Register extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    this.props.registerUser(this.state, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    const errorDiv = user.error ? (\r\n      <div className=\"text-danger mb-3\">{user.error.message}</div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col mt-5\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email address</label>\r\n                <input\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  value={this.state.email}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  value={this.state.password}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                <input\r\n                  required\r\n                  onChange={this.handleChange}\r\n                  value={this.state.confirmPassword}\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </div>\r\n\r\n              {errorDiv}\r\n\r\n              <button\r\n                disabled={user.isLoading}\r\n                type=\"submit\"\r\n                className=\"btn btn-success\"\r\n              >\r\n                {user.isLoading ? (\r\n                  <div className=\"spinner-border text-light\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"col\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  registerUser\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"../components/global/Footer\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../redux/actions/userActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.loginUser(this.state, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    const errorDiv = user.error ? (\r\n      <div className=\"text-danger mb-3\">{user.error.message}</div>\r\n    ) : null;\r\n\r\n    return (\r\n      <div id=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-4\">\r\n            <h2>Welcome Back</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-4\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInputChange}\r\n                  value={this.state.email}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  onChange={this.handleInputChange}\r\n                  value={this.state.password}\r\n                />\r\n              </div>\r\n              <div className=\"form-group form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id=\"exampleCheck1\"\r\n                />\r\n                <a href=\"http://www.google.com\">Forgot your password?</a>\r\n              </div>\r\n\r\n              {errorDiv}\r\n\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Login\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <Nav />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  loginUser\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(Login);\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUserCog, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Nav2 extends Component {\r\n    render(){\r\n        return(\r\n            <nav className=\"col-md-2 d-none d-md-block sidebar\">\r\n                <div className=\"sidebar-sticky\">\r\n                    <ul className=\"nav flex-column\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">\r\n                                <FontAwesomeIcon icon={ faHome } size=\"2x\" />\r\n                            </a>\r\n                            <a className=\"nav-link\" href=\"/\">\r\n                                <FontAwesomeIcon icon={ faUserCog } size=\"2x\" />\r\n                            </a>\r\n                            <a className=\"nav-link\" href=\"/\">\r\n                                <FontAwesomeIcon icon={ faPlusSquare } size=\"2x\" />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav2;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <input className=\"form-control form-control-dark\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\n\r\nclass RecipesListing extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"album py-5 bg-light\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card mb-4 shadow-sm\">\r\n                                <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Thumbnail\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#55595c\"></rect></svg>\r\n                                <div className=\"card-body\">\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card mb-4 shadow-sm\">\r\n                                <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Thumbnail\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#55595c\"></rect></svg>\r\n                                <div className=\"card-body\">\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card mb-4 shadow-sm\">\r\n                                <svg className=\"bd-placeholder-img card-img-top\" width=\"100%\" height=\"225\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\" aria-label=\"Placeholder: Thumbnail\"><title>Placeholder</title><rect width=\"100%\" height=\"100%\" fill=\"#55595c\"></rect></svg>\r\n                                <div className=\"card-body\">\r\n                                <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipesListing;","import React from \"react\";\r\n\r\nconst styles = {\r\n  badge: {\r\n    fontSize: \"17px\",\r\n    margin: \"0 5px 5px 0\"\r\n  },\r\n  xBtn: {\r\n    fontSize: \"12px\",\r\n    marginLeft: \"4px\",\r\n    padding: \"0 4px\"\r\n  }\r\n};\r\n\r\nconst Badge = props => {\r\n  return (\r\n    <span style={styles.badge} className=\"badge badge-success\">\r\n      {props.pref}\r\n      <button\r\n        type=\"button\"\r\n        style={styles.xBtn}\r\n        className=\"btn btn-outline-light\"\r\n        onClick={() => props.handlePrefRemove(props.pref)}\r\n      >\r\n        X\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\n\r\nconst LoadingButton = ({ isLoading }) => {\r\n  return (\r\n    <button disabled={isLoading} type=\"submit\" className=\"btn btn-success\">\r\n      {isLoading ? (\r\n        <div className=\"spinner-border text-light\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n      ) : (\r\n        \"Submit\"\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../redux/actions/userActions\";\r\nimport \"./updateUser.scss\";\r\nimport Badge from \"../components/global/Badge\";\r\nimport LoadingButton from \"../components/global/LoadingButton\";\r\n\r\nexport class UpdateUser extends Component {\r\n  state = {\r\n    displayName: \"\",\r\n    preference: \"\", // added this for input field\r\n    preferences: [],\r\n    country: \"\",\r\n    cuisine: \"\"\r\n  };\r\n\r\n  updateStateFromProps = user => {\r\n    this.setState({\r\n      displayName: user.displayName || \"\",\r\n      preferences: user.preferences || [],\r\n      country: user.country || \"\",\r\n      cuisine: user.cuisine || \"\"\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateStateFromProps(this.props.user);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user.isLoading !== prevProps.user.isLoading) {\r\n      this.updateStateFromProps(this.props.user);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  // Add badge when pressing add button\r\n  handlePrefAdd = () => {\r\n    const newPref = this.state.preference.trim().toLowerCase();\r\n    if (newPref) {\r\n      this.setState(prevState => {\r\n        if (prevState.preferences.indexOf(newPref) > -1) {\r\n          alert(\"Tag already exists\");\r\n          return prevState;\r\n        } else {\r\n          return {\r\n            preferences: [...prevState.preferences, newPref]\r\n          };\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Remove badge when pressing x button on the badge\r\n  handlePrefRemove = prefToRemove => {\r\n    this.setState(prevState => {\r\n      return {\r\n        preferences: prevState.preferences.filter(pref => pref !== prefToRemove)\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Call action to update user info\r\n    this.props.updateUser(this.state, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <div className=\"mt-5\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-12 col-md-4\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"displayName\">Display Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"displayName\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.displayName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"preference\">Preference</label>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control pref\"\r\n                    id=\"preference\"\r\n                    onChange={this.handleChange}\r\n                    value={this.state.preference}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handlePrefAdd}\r\n                    className=\"btn btn-outline-success\"\r\n                  >\r\n                    ADD\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {this.state.preferences.map((pref, i) => (\r\n                <Badge\r\n                  key={i}\r\n                  pref={pref}\r\n                  handlePrefRemove={this.handlePrefRemove}\r\n                />\r\n              ))}\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"country\">Country</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"country\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.country}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"cuisine\">Cuisine</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"cuisine\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.cuisine}\r\n                />\r\n              </div>\r\n\r\n              <LoadingButton isLoading={user.isLoading} />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  updateUser\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UpdateUser);\r\n","const initialState = {\r\n  isAuthenticated: false,\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"USER_LOGIN_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case \"USER_LOGIN_SUCCESS\":\r\n      return {\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        ...action.payload\r\n      };\r\n    case \"USER_LOGIN_FAILURE\":\r\n      return {\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case \"USER_REGISTER_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case \"USER_REGISTER_SUCCESS\":\r\n      return {\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        ...action.payload\r\n      };\r\n    case \"USER_REGISTER_FAILURE\":\r\n      return {\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case \"USER_GET_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case \"USER_GET_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        ...action.payload\r\n      };\r\n    case \"USER_GET_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case \"USER_UPDATE_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case \"USER_UPDATE_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        ...action.payload\r\n      };\r\n    case \"USER_UPDATE_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    case \"SET_AUTHENTICATED\":\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true\r\n      };\r\n    case \"SET_UNAUTHENTICATED\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport recipeReducer from \"./reducers/recipeReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  recipe: recipeReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Landing from \"./pages/landing\";\r\nimport Register from \"./pages/register\";\r\nimport Login from \"./pages/login\";\r\nimport InitialPref from \"./pages/initialpref\";\r\nimport Main from \"./pages/main\";\r\nimport Details from \"./pages/details\";\r\nimport PageNotFound from \"./pages/404\";\r\nimport UpdateUser from \"./pages/updateUser\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { signoutUser, getUser } from \"./redux/actions/userActions\";\r\nimport axios from \"axios\";\r\nimport AuthenticatedRoute from \"./components/main/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./components/main/UnauthenticatedRoute\";\r\n\r\n// see if user is logged in when app is first launched\r\n// or when browser is refreshed by checking the token stored in localStorage\r\nlet token = localStorage.token;\r\nif (token) {\r\n  const decodedToken = jwtDecode(token);\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    // if there's no valid token, remove all user info from state\r\n    store.dispatch(signoutUser());\r\n    window.location.href = \"/login\";\r\n  } else {\r\n    // else, get user info\r\n    store.dispatch({ type: \"SET_AUTHENTICATED\" });\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n    store.dispatch(getUser());\r\n  }\r\n}\r\n\r\n// AuthenticatedRoute : only allow authenticated user, otherwise redirect to login page (ex. main, details, etc)\r\n// UnauthenticatedRoute : redirect to main page if user is authenticated (ex. login, register, etc)\r\nclass App extends Component {\r\n  render() {\r\n    window.location.href =\r\n      \"https://github.com/Project-MKB/project-mkb/tree/dev/backend\";\r\n    return null;\r\n    // return (\r\n    //   <Provider store={store}>\r\n    //     <Router>\r\n    //       <Switch>\r\n    //         <Route exact path=\"/\" component={Landing} />\r\n    //         <UnauthenticatedRoute exact path=\"/register\" component={Register} />\r\n    //         <UnauthenticatedRoute exact path=\"/login\" component={Login} />\r\n    //         <Route exact path=\"/onboarding\" component={InitialPref} />\r\n    //         <Route exact path=\"/main\" component={Main} />\r\n    //         <Route exact path=\"/details\" component={Details} />\r\n    //         <AuthenticatedRoute\r\n    //           exact\r\n    //           path=\"/user/update\"\r\n    //           component={UpdateUser}\r\n    //         />\r\n    //         <Route path=\"/\" component={PageNotFound} />\r\n    //       </Switch>\r\n    //     </Router>\r\n    //   </Provider>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AuthenticatedRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.user.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthenticatedRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UnauthenticatedRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.user.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(UnauthenticatedRoute);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}